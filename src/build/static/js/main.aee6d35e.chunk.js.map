{"version":3,"sources":["Pages/HomePageComponent.js","Pages/AboutPageComponent.js","Pages/article-content.js","components/ArticleList.js","Pages/CommentsComponend.js","Pages/ArticlePageComponent.js","Pages/ArticlesListPageComponent.js","Pages/PageNotFoundComponent.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePageComponent","AboutPageComponent","articles","name","title","content","ArticleList","map","item","key","to","substring","CommentsComponent","props","comments","index","username","comment","handleComments","ArticlePageComponent","match","params","article","find","otherArticles","filter","useState","upvotes","articleInfo","setArticleInfo","useEffect","a","fetch","response","console","log","JSON","stringify","json","result","fetchData","ArticlesListPageComponent","PageNotFoundComponent","Navbar","App","className","id","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yPAmBeA,EAjBW,WACtB,OACI,oCACI,yCACA,6lBAGA,0xBAGA,+wBCOGC,EAjBY,WACvB,OACI,oCACI,0CACA,0xBAGA,6wBAGA,+lB,iCCOGC,EAnBE,CAAC,CACdC,KAAM,cACNC,MAAO,uBACPC,QAAS,CACL,ikBACA,8vBACA,mvBAGR,CACIF,KAAM,aACNC,MAAO,sBACPC,QAAS,CACL,ikBACA,8vBACA,ovBCDOC,EAXK,SAAC,GAAD,IAAEJ,EAAF,EAAEA,SAAF,OAChB,oCACCA,EAASK,KAAI,SAACC,EAAMC,GAAP,OACV,kBAAC,IAAD,CAAMC,GAAE,mBAAcF,EAAKL,MAAQM,IAAKA,GACpC,4BAAKD,EAAKL,MACV,2BAAIK,EAAKH,QAAQ,GAAGM,UAAU,EAAE,IAAhC,aCYGC,EATW,SAACC,GAC1B,OAAO,6BACA,wCACA,4BAZe,SAACA,GACpB,OAAOA,EAAMC,SAASP,KAAI,SAACC,EAAMO,GAC7B,OAAO,wBAAIN,IAAKM,GACR,4BAAKP,EAAKQ,UACV,2BAAIR,EAAKS,aASZC,CAAeL,MCyBbM,EAnCc,SAAC,GAAa,IAEjChB,EAFgC,EAAXiB,MAERC,OAAOlB,KACpBmB,EAAUpB,EAASqB,MAAK,SAAAf,GAAI,OAAIA,EAAKL,OAASA,KAC9CqB,EAAgBtB,EAASuB,QAAO,SAAAjB,GAAI,OAAIA,EAAKL,OAASA,KAJtB,EAMAuB,mBAAS,CAACC,QAAQ,EAAGb,SAAS,KAN9B,mBAM/Bc,EAN+B,KAMlBC,EANkB,KAkBtC,OAVAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,iBAAD,OAAkB7B,IAD9B,cACV8B,EADU,OAEdC,QAAQC,IAAIC,KAAKC,UAAUJ,IAFb,SAGKA,EAASK,OAHd,OAGVC,EAHU,OAIdV,EAAeU,GAJD,2CAAH,qDAMfC,KACD,CAACrC,IAEAmB,EAGA,oCACI,+CAAqBM,EAAYD,SACjC,8CAAoBL,EAAQnB,MAC3BmB,EAAQjB,QAAQE,KAAI,SAACC,EAAMC,GACxB,OAAO,uBAAGA,IAAKA,GAAMD,MAEzB,6BACI,kBAAC,EAAD,CAAaN,SAAUsB,IACvB,kBAAC,EAAD,CAAmBV,SAAUc,EAAYd,aAXjC,uDCVT2B,EATmB,WAC9B,OACI,oCACI,kDACA,kBAAC,EAAD,CAAavC,SAAUA,MCApBwC,EANe,kBAC1B,6BACI,iDCWOC,EAZA,WACX,OACI,6BACI,4BACI,4BAAI,kBAAC,IAAD,CAAMjC,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,kBAAT,qB,MCoBLkC,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKC,GAAG,aACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWhD,EAAmBiD,OAAK,IACnD,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAW/C,IAChC,kBAAC,IAAD,CAAO8C,KAAK,iBAAiBC,UAAWP,IACxC,kBAAC,IAAD,CAAOM,KAAK,iBAAiBC,UAAW7B,IACxC,kBAAC,IAAD,CAAO6B,UAAWN,SCTVQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjC,MACvB,2DCZNkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.aee6d35e.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePageComponent = () => {\n    return (\n        <>\n            <h1>Home Page</h1>\n            <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n            <p>\n            Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n            </p>\n            <p>\n            There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\n            </p>\n        </>\n    )\n}\n\nexport default HomePageComponent;","import React from 'react';\n\nconst AboutPageComponent = () => {\n    return (\n        <>\n            <h1>About Page</h1>\n            <p>\n            Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n            </p>\n            <p>\n            There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\n            </p>\n            <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </p>\n        </>\n    )\n}\n\nexport default AboutPageComponent;","const articles = [{\n    name: \"learn-react\",\n    title: \"How to learn ReactJS\",\n    content: [\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n        \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of `de Finibus Bonorum et Malorum` (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, `Lorem ipsum dolor sit amet..`, comes from a line in section 1.10.32.\",\n        \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\"\n    ]\n},\n{\n    name: \"learn-node\",\n    title: \"How to learn NodeJS\",\n    content: [\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n        \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of `de Finibus Bonorum et Malorum` (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, `Lorem ipsum dolor sit amet..`, comes from a line in section 1.10.32.\",\n        \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.\"\n    ]\n}];\n\nexport default articles;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticleList = ({articles}) => (\n    <>\n    {articles.map((item, key) => (\n        <Link to={`/article/${item.name}`} key={key}>\n            <h3>{item.name}</h3>\n            <p>{item.content[0].substring(0,50)}...</p>\n        </Link>\n    ))}\n    </>\n);\n\nexport default ArticleList;\n","import React from 'react';\n\nconst handleComments = (props) => {\n    return props.comments.map((item, index) => {\n        return <li key={index}>\n                <h3>{item.username}</h3>\n                <p>{item.comment}</p>\n            </li>\n    });\n}\n\nconst CommentsComponent = (props) => {\n return(<div>\n        <h3>Comments</h3>\n        <ul>\n            {handleComments(props)}\n        </ul>\n    </div>);\n}\n\nexport default CommentsComponent;","import React, { useState, useEffect } from 'react';\nimport articles from './article-content';\nimport ArticleList from '../components/ArticleList';\nimport CommentsComponent from './CommentsComponend';\n\nconst ArticlePageComponent = ({match}) => {\n\n    const name = match.params.name;\n    const article = articles.find(item => item.name === name);\n    const otherArticles = articles.filter(item => item.name !== name);\n\n    const [articleInfo, setArticleInfo] = useState({upvotes:0, comments:[]});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let response = await fetch(`/api/articles/${name}`);\n            console.log(JSON.stringify(response));\n            let result = await response.json();\n            setArticleInfo(result);\n        }\n        fetchData();\n    }, [name]);\n\n    if(!article) return <h1>Article doesn't exist.</h1>\n\n    return (\n        <>\n            <p>Article Upvotes: {articleInfo.upvotes}</p>\n            <h1>Article Page - {article.name}</h1>\n            {article.content.map((item, key) => {\n                return <p key={key}>{item}</p>\n            })}\n            <div>\n                <ArticleList articles={otherArticles} />\n                <CommentsComponent comments={articleInfo.comments} />\n            </div>\n        </>\n    )\n}\n\nexport default ArticlePageComponent;","import React from 'react';\nimport ArticleList from '../components/ArticleList';\nimport articles from './article-content';\n\nconst ArticlesListPageComponent = () => {\n    return (\n        <>\n            <h1>Articles List Page</h1>\n            <ArticleList articles={articles} />\n        </>\n    )\n}\n\nexport default ArticlesListPageComponent;","import React from 'react';\n\nconst PageNotFoundComponent = () => (\n    <div>\n        <h3>Page not found.</h3>\n    </div>\n)\n\nexport default PageNotFoundComponent;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <nav>\n            <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/about\">About</Link></li>\n                <li><Link to=\"/articles-list\">Articles List</Link></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePageComponent from './Pages/HomePageComponent';\nimport AboutPageComponent from './Pages/AboutPageComponent';\nimport ArticlePageComponent from './Pages/ArticlePageComponent';\nimport ArticlesListPageComponent from './Pages/ArticlesListPageComponent';\nimport PageNotFoundComponent from './Pages/PageNotFoundComponent';\nimport Navbar from './Navbar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePageComponent} exact />\n            <Route path=\"/about\" component={AboutPageComponent} />\n            <Route path=\"/articles-list\" component={ArticlesListPageComponent} />\n            <Route path=\"/article/:name\" component={ArticlePageComponent} />\n            <Route component={PageNotFoundComponent}/>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}